package design.patterns.strctural.facade

/**
 * Шаблон проектирования Facade (Фасад) используется для упрощения интерфейса сложной системы, предоставляя удобный и единый доступ к множеству подсистем. Этот шаблон помогает скрыть сложность внутренних механизмов и предлагает клиенту более простой и понятный интерфейс для работы с системой.
 *
 * Пример: Фасад для работы с мультимедийной системой
 * Предположим, у нас есть сложная мультимедийная система, которая включает в себя несколько подсистем, таких как:
 *
 * AudioSystem — для работы со звуком.
 * VideoSystem — для работы с видео.
 * LightingSystem — для управления освещением.
 *
 * Android использует концепцию View и ViewGroup для построения UI.
 * ViewGroup (например, LinearLayout, RelativeLayout) служат контейнерами для View (например, кнопок, текстовых полей и т. д.).
 * Это также пример использования фасадного шаблона, так как ViewGroup скрывает детали работы с дочерними элементами и предоставляет простой API для их размещения, управления и обновления.
 * */

fun main(){
    // Создаем объекты для каждой подсистемы
    val audioSystem = AudioSystem()
    val videoSystem = VideoSystem()
    val lightingSystem = LightingSystem()

    // Создаем фасад
    val homeTheater = HomeTheaterFacade(audioSystem, videoSystem, lightingSystem)

    // Используем фасад для запуска фильма
    homeTheater.startMovie()

    // Прерываем фильм
    println("\nMovie is over!")
    homeTheater.endMovie()
}