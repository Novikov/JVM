package concurrency.tasks

/**
 * 1. Асинхронная загрузка веб-страниц
 * Входные данные: Список URL-адресов.
 *
 * Задача: Создайте программу, которая принимает список URL-адресов и загружает содержимое каждой страницы асинхронно с использованием корутин или RxJava. Верните результаты в виде списка строк.
 * 2. Обработка чисел
 * Входные данные: Список целых чисел.
 *
 * Задача: Реализуйте программу, которая принимает список целых чисел и асинхронно вычисляет их квадратные значения. Используйте корутины или RxJava для выполнения вычислений параллельно.
 * 3. Преобразование строк
 * Входные данные: Список строк.
 *
 * Задача: Создайте программу, которая принимает список строк и асинхронно преобразует их в верхний регистр. Используйте корутины или RxJava для выполнения преобразований параллельно.
 * 4. Веб-сервис для анализа текста
 * Входные данные: Текст и список ключевых слов.
 *
 * Задача: Напишите программу, которая асинхронно анализирует текст и считает количество вхождений каждого ключевого слова. Используйте корутины или RxJava для обработки текста параллельно.
 * 5. Загрузка изображений
 * Входные данные: Список URL-адресов изображений.
 *
 * Задача: Создайте программу, которая загружает изображения из списка URL-адресов асинхронно. Используйте корутины или RxJava для загрузки и сохранения изображений локально.
 * 6. Поиск по файлам
 * Входные данные: Директория и строка для поиска.
 *
 * Задача: Реализуйте программу, которая асинхронно ищет указанную строку в текстовых файлах внутри заданной директории. Используйте корутины или RxJava для параллельного чтения файлов.
 * 7. Генерация отчетов
 * Входные данные: Список данных для отчетов.
 *
 * Задача: Напишите программу, которая принимает список данных и асинхронно генерирует отчеты в формате CSV. Используйте корутины или RxJava для формирования отчетов.
 * 8. Простой чат-сервер
 * Входные данные: Список сообщений.
 *
 * Задача: Создайте простую имитацию чат-сервера, который асинхронно обрабатывает входящие сообщения. Используйте корутины или RxJava для обработки сообщений параллельно и возврата ответов.
 * 9. Асинхронная проверка статуса
 * Входные данные: Список URL-адресов.
 *
 * Задача: Реализуйте программу, которая асинхронно проверяет доступность веб-сайтов из списка URL-адресов. Используйте корутины или RxJava для выполнения проверок параллельно.
 * 10. Прогноз погоды
 * Входные данные: Список городов.
 *
 * Задача: Напишите программу, которая принимает список городов и асинхронно запрашивает прогноз погоды для каждого города из API. Используйте корутины или RxJava для обработки запросов.
 * Заключение
 * Эти задачи обеспечивают возможность применения корутин и RxJava в разнообразных сценариях. Они помогут вам развить навыки асинхронного программирования и работы с потоками данных, а также управления их состоянием.
 * */